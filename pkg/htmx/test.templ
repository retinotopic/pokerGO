package htmxtempl

templ Imphtmx() {
    <head>
        <script src="https://unpkg.com/htmx.org@1.9.9"></script>
        <script src="https://unpkg.com/htmx.org/dist/ext/ws.js"></script>
        <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
        <script src="https://unpkg.com/htmx.org/dist/ext/client-side-templates.js"></script>
    </head>
}

templ Pagemain() {
    @Imphtmx()
    <button hx-get="/startgame" hx-target="this" hx-swap="outerHTML" hx-replace-url="true">
        Create quick game
    </button>
}

templ Turner(strr string) {
    @Imphtmx()
    <div hx-ext="ws" ws-connect={strr} x-data="{ open: false , count: -1 }">

        <template id="PlayerPlace">
            <div id="-10" >
                <span>Name</span>
                <span>Stack</span>
            </div>
        </template>

        <template id="PlayerButton">
            <button id="-11" x-on:click="open = ! open;handleClickId(this.id)">
                Take seat
            </button>
        </template>

        <button id="0" x-on:click="open = ! open;handleClickId(this.id)">
            Take seat
        </button>

        <button id="1" x-on:click="open = ! open;handleClickId(this.id)">
            Take seat
        </button>

        <button id="2" x-on:click="open = ! open;handleClickId(this.id)">
            Take seat
        </button>

        <button id="3" x-on:click="open = ! open;handleClickId(this.id)">
            Take seat
        </button>

        <button id="4" x-on:click="open = ! open;handleClickId(this.id)">
            Take seat
        </button>

        <button id="5" x-on:click="open = ! open;handleClickId(this.id)">
            Take seat
        </button>

        <form x-show.important="open" name="myForm" ws-send>
            <input name="Name" Enter your name required />
            <input id="Stack" type="number" Enter your wished stack required pattern="[0-9]*" inputmode="numeric" />
            <button x-on:click="open = ! open;handleClick(count)"> Send data </button>
        </form>

        <script defer>
            var cntGlobal = -1
            function handleClick(cnt) {
                cntGlobal = cnt
            }
            function handleClickId(cnt1) {
                this.count = cnt1
            }
            htmx.on('htmx:wsBeforeMessage', (event) => {
                player = JSON.parse(event.detail.message)
                console.log(player)
                console.log(player.Place)
                let str;
                let plpl;
                if (player.IsActive === true) {
                    str = "PlayerPlace";
                } else {
                    str = "PlayerButton";
                }
                plpl = document.getElementById(str).content.firstElementChild.cloneNode(true);
                console.log(plpl)
                plpl.id = player.Place
                if (player.IsActive === true) {
                    plpl.children[0].textContent = player.Name;
                    plpl.children[1].textContent = player.Stack;
                }
                document.getElementById(player.Place).replaceWith(plpl)


            });
            htmx.on('htmx:wsBeforeSend', (event) => {
                let stack = Number(document.getElementById("Stack").value)
                event.detail.socketWrapper.send(   JSON.stringify({'Stack':stack,'Place':cntGlobal,'IsActive':true}))
            });
        </script>
    </div>
}
templ Refresh(mls string) {
    <head>
        <meta http-equiv="refresh" content={mls} />
    </head>
    <b> loading... </b>
}